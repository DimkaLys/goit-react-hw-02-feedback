{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackBtn/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/Feedback/Feedback.jsx","App.js","index.js"],"names":["Section","title","children","className","FeedbackOptions","options","onLeaveFeedback","buttonNames","Object","keys","map","button","name","onClick","type","shortid","generate","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Feedback","state","target","setState","prev","countTotalFeedback","countPositivePercentage","Math","round","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yVAiBeA,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,sBAAKC,UAAU,UAAf,UACE,oBAAIA,UAAU,SAAd,SAAwBF,IACvBC,M,sBCqBQE,MAxBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC5BC,EAAcC,OAAOC,KAAKJ,GAChC,OACE,8BACGE,EAAYG,KAAI,SAAAC,GAAM,OACrB,wBACER,UAAU,MAEVS,KAAMD,EACNE,QAASP,EACTQ,KAAK,SALP,SAOGH,GALII,IAAQC,kB,MCsBRC,MA9Bf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,gCACE,oBAAGnB,UAAU,OAAb,mBACQ,sBAAMA,UAAU,OAAhB,SAAwBe,OAEhC,oBAAGf,UAAU,OAAb,sBACW,sBAAMA,UAAU,OAAhB,SAAwBgB,OAEnC,oBAAGhB,UAAU,OAAb,kBACO,sBAAMA,UAAU,OAAhB,SAAwBiB,OAE/B,oBAAGjB,UAAU,OAAb,oBACS,sBAAMA,UAAU,OAAhB,SAAwBkB,OAEjC,oBAAGlB,UAAU,OAAb,gCACqB,uBAAMA,UAAU,OAAhB,UAAwBmB,EAAxB,cCTZC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,KCIPC,E,4MACJC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPd,gBAAkB,YAAiB,IAAdqB,EAAa,EAAbA,OACnB,EAAKC,UAAS,SAAAC,GAAI,sBAAQF,EAAOf,KAAOiB,EAAKF,EAAOf,MAAQ,O,EAG9DkB,mBAAqB,WACnB,MAA+B,EAAKJ,MACpC,OADA,EAAQR,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBW,wBAA0B,WACxB,MAA+B,EAAKL,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OAAOY,KAAKC,MAAO,KAAOf,EAAOC,EAAUC,GAAQF,I,4CAGrD,WACE,IACEQ,EAIEQ,KAJFR,MACApB,EAGE4B,KAHF5B,gBACAwB,EAEEI,KAFFJ,mBACAC,EACEG,KADFH,wBAEMb,EAAuBQ,EAAvBR,KAAMC,EAAiBO,EAAjBP,QAASC,EAAQM,EAARN,IACvB,OACE,sBAAKjB,UAAU,cAAf,UACE,cAAC,EAAD,CAASF,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBI,QAASqB,EAAOpB,gBAAiBA,MAEpD,cAAC,EAAD,CAASL,MAAM,aAAf,SAC4B,IAAzB6B,IACC,cAAC,EAAD,CAAcN,QAAQ,sBAEtB,cAAC,EAAD,CACEN,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,IACPR,mBAAoBS,e,GA3CXI,aAoDRV,I,MChDAW,MARf,WACE,OACE,qBAAKjC,UAAU,MAAf,SACE,cAAC,EAAD,OCDNkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7305e1fe.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport \"./Section.css\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <div className=\"Buttons\" >\r\n      <h1 className=\"tittle\">{title}</h1>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport \"./FeedbackOptions.css\";\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  const buttonNames = Object.keys(options);\r\n  return (\r\n    <div>\r\n      {buttonNames.map(button => (\r\n        <button\r\n          className=\"btn\"\r\n          key={shortid.generate()}\r\n          name={button}\r\n          onClick={onLeaveFeedback}\r\n          type=\"button\"\r\n        >\r\n          {button}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.objectOf(PropTypes.number.isRequired),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\nimport './Statistics.css';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <div>\r\n      <p className=\"text\">\r\n        Good: <span className=\"span\">{good}</span>\r\n      </p>\r\n      <p className=\"text\">\r\n        Neutral: <span className=\"span\">{neutral}</span>\r\n      </p>\r\n      <p className=\"text\">\r\n        Bad: <span className=\"text\">{bad}</span>\r\n      </p>\r\n      <p className=\"text\">\r\n        Total: <span className=\"span\">{total}</span>\r\n      </p>\r\n      <p className=\"text\">\r\n        Positive feedback: <span className=\"span\">{positivePercentage}%</span>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React, { Component } from \"react\";\r\nimport \"./Feedback.css\";\r\nimport Section from '../Section/Section';\r\nimport FeedbackOptions from \"../FeedbackBtn/FeedbackOptions\";\r\nimport Statistics from '../Statistics/Statistics';\r\nimport Notification from '../Notification/Notification';\r\n\r\nclass Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onLeaveFeedback = ({ target }) => {\r\n    this.setState(prev => ({ [target.name]: prev[target.name] + 1 }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositivePercentage = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return Math.round((100 / (good + neutral + bad)) * good);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      state,\r\n      onLeaveFeedback,\r\n      countTotalFeedback,\r\n      countPositivePercentage,\r\n    } = this;\r\n    const { good, neutral, bad } = state;\r\n    return (\r\n      <div className=\"feedbackbox\">\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions options={state} onLeaveFeedback={onLeaveFeedback} />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {countTotalFeedback() === 0 ? (\r\n            <Notification message=\"No feedback given\" />\r\n          ) : (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={countTotalFeedback()}\r\n              positivePercentage={countPositivePercentage()}\r\n            />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;","import Feedback from \"./components/Feedback/Feedback\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}